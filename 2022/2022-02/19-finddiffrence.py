'''
Leetcode
389. Find the Difference (easy)
2022-02-07

You are given two strings s and t.
String t is generated by random shuffling string s and 
then add one more letter at a random position.
Return the letter that was added to t.
'''

from collections import defaultdict


# Try 1
# Runtime: 32 ms, faster than 89.14% of Python3 online submissions for Find the Difference.
# Memory Usage: 14 MB, less than 88.02% of Python3 online submissions for Find the Difference.
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        
        s_freq, t_freq = defaultdict(int), defaultdict(int)
        for c in s: s_freq[c] += 1
        for c in t: t_freq[c] += 1
            
        for c in t_freq:
            if c not in s_freq or t_freq[c] != s_freq[c]: return c
            
        return ''



# difference
# Runtime: 32 ms, faster than 89.14% of Python3 online submissions for Find the Difference.
# Memory Usage: 14 MB, less than 79.84% of Python3 online submissions for Find the Difference.
class Solution2:
    def findTheDifference(self, s: str, t: str) -> str:
        out = 0
        for i in range(len(s)):
            out -= ord(s[i])
            out += ord(t[i])
        out += ord(t[-1])
        return chr(out)



# XOR
# https://leetcode.com/problems/find-the-difference/discuss/86881/Python-solution-which-beats-96/1256351
# Runtime: 57 ms, faster than 28.27% of Python3 online submissions for Find the Difference.
# Memory Usage: 14 MB, less than 88.02% of Python3 online submissions for Find the Difference.
class Solution3:
    def findTheDifference(self, s: str, t: str) -> str:
        res = ord(t[-1])
        for i in range(len(s)):
            res ^= ord(s[i]) ^ ord(t[i])
        return chr(res)



tests = [
    ['abcd', 'cdabt'],
    ['', 'a'],
    ['a', 'aa']
]
solution = Solution3()
for test in tests:
    print(f'test: {test}\tout: {solution.findTheDifference(test[0], test[1])}')
