"""
Leetcode
1332. Remove Palindromic Subsequences (easy)
2022-06-08

You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.
"""



# Runtime: 42 ms, faster than 42.82% of Python3 online submissions for Remove Palindromic Subsequences.
# Memory Usage: 13.7 MB, less than 96.13% of Python3 online submissions for Remove Palindromic Subsequences.
class Solution:
    def removePalindromeSub(self, s: str) -> int:
        l = 0
        r = len(s) - 1
        palindrome = True
        while l < r:
            if s[l] != s[r]:
                palindrome = False
                break
            l += 1
            r -= 1
        return 1 if palindrome else 2



# Runtime: 49 ms, faster than 23.76% of Python3 online submissions for Remove Palindromic Subsequences.
# Memory Usage: 13.8 MB, less than 53.87% of Python3 online submissions for Remove Palindromic Subsequences.
class Solution1:
    def removePalindromeSub(self, s: str) -> int:
        return 1 if s == s[::-1] else 2



s = Solution1()
tests = [
    "ccddaabb",
    "aabbaabb",
    "aabbbbaa",
    "aabbabbaa",
    "ababa",
    "abb",
    "baabb",
]
for t in tests:
    print(t)
    print(s.removePalindromeSub(t))
    print()
