"""
Leetcode
389. Find the Difference (easy)
2023-09-25

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:

Input: s = "", t = "y"
Output: "y"

Constraints:

    0 <= s.length <= 1000
    t.length == s.length + 1
    s and t consist of lowercase English letters.
"""

from collections import Counter
from itertools import zip_longest


class Solution:
    """
    Runtime: 35 ms, faster than 88.54% of Python3 online submissions for Find the Difference.
    Memory Usage: 16.4 MB, less than 42.33% of Python3 online submissions for Find the Difference.
    """

    def findTheDifference(self, s: str, t: str) -> str:
        diff = Counter(t) - Counter(s)
        return list(diff.keys())[0]


class Solution1:
    """
    Runtime: 38 ms, faster than 77.77% of Python3 online submissions for Find the Difference.
    Memory Usage: 16.2 MB, less than 75.46% of Python3 online submissions for Find the Difference.
    """

    def findTheDifference(self, s: str, t: str) -> str:
        count = [0] * 27
        ord_a = ord('a')
        for c1, c2 in zip_longest(s, t, fillvalue=(chr(ord('z') + 1))):
            count[ord(c1) - ord_a] += 1
            count[ord(c2) - ord_a] -= 1
        for i in range(26):
            if count[i] != 0:
                return chr(i + ord_a)
